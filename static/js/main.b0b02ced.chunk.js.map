{"version":3,"sources":["components/Card/index.js","components/Title/index.js","components/Table/index.js","App.js","index.js"],"names":["Card","props","className","src","employee","alt","name","Title","id","children","Table","columns","data","useState","filterNameInput","setFilterNameInput","filterOccupationInput","setFilterOccupationInput","filterDepartmentInput","setFilterDepartmentInput","useTable","useFilters","useSortBy","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","setFilter","Fragment","placeholder","value","onChange","event","target","undefined","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","isSorted","isSortedDesc","render","row","i","getRowProps","cells","cell","getCellProps","App","setData","useEffect","Employee","useMemo","Header","accessor","Cell","setTable","ReactDOM","document","getElementById"],"mappings":"sfAiBeA,MAdf,SAAcC,GAEV,OAEI,yBAAKC,UAAU,QACX,yBAAKA,UAAU,mBACX,yBAAKC,IAAKF,EAAMG,SAAUC,IAAKJ,EAAMK,UCMtCC,G,MAZD,SAACN,GAEX,OAEI,yBAAKO,GAAG,eACJ,wBAAIN,UAAU,SAASD,EAAMQ,a,aCJ1B,SAASC,EAAT,GAAmC,IAAlBC,EAAiB,EAAjBA,QAASC,EAAQ,EAARA,KAAQ,EAECC,mBAAS,IAFV,mBAEtCC,EAFsC,KAErBC,EAFqB,OAGaF,mBAAS,IAHtB,mBAGtCG,EAHsC,KAGfC,EAHe,OAIaJ,mBAAS,IAJtB,mBAItCK,EAJsC,KAIfC,EAJe,OAerCC,mBAEA,CAEIT,UACAC,QAIJS,aACAC,aAjBAC,EARqC,EAQrCA,cACAC,EATqC,EASrCA,kBACAC,EAVqC,EAUrCA,aACAC,EAXqC,EAWrCA,KACAC,EAZqC,EAYrCA,WACAC,EAbqC,EAarCA,UAwCA,OAEI,kBAAC,IAAMC,SAAP,KAEI,yBAAK3B,UAAU,UAEX,2BAAO4B,YAAa,kBAAmBC,MAAOjB,EAAiBkB,SA9B5C,SAAAC,GAE3B,IAAMF,EAAQE,EAAMC,OAAOH,YAASI,EACpCP,EAAU,OAAQG,GAClBhB,EAAmBgB,MA2BX,2BAAOD,YAAa,wBAAyBC,MAAOf,EAAuBgB,SAvBlD,SAAAC,GAEjC,IAAMF,EAAQE,EAAMC,OAAOH,YAASI,EACpCP,EAAU,aAAcG,GACxBd,EAAyBc,MAoBjB,2BAAOD,YAAa,wBAAyBC,MAAOb,EAAuBc,SAhBlD,SAAAC,GAEjC,IAAMF,EAAQE,EAAMC,OAAOH,YAASI,EACpCP,EAAU,aAAcG,GACxBZ,EAAyBY,OAgBrB,0BAAWR,IAEP,+BACKE,EAAaW,KAAI,SAAAC,GAAW,OAEzB,uBAAQA,EAAYC,sBACfD,EAAYE,QAAQH,KAAI,SAAAI,GAAM,OAE3B,wCAAQA,EAAOC,eAAeD,EAAOE,wBAArC,CAEIxC,UACIsC,EAAOG,SAAWH,EAAOI,aAAe,YAAc,WAAa,KAEnEJ,EAAOK,OAAO,mBAYtC,0BAAWrB,IACNE,EAAKU,KAAI,SAACU,EAAKC,GAGR,OADJpB,EAAWmB,GAGH,uBAAQA,EAAIE,cACPF,EAAIG,MAAMb,KAAI,SAAAc,GAEX,OAEI,uBAAQA,EAAKC,eACRD,EAAKL,OAAO,mB,WCXtDO,EAzFH,WAAO,IAAD,EAEQvC,mBAAS,IAFjB,mBAETD,EAFS,KAEHyC,EAFG,KAIhBC,qBAAU,WAGND,EADWE,KAKb,IAEF,IAAM5C,EAAU6C,mBAEd,iBAEE,CAEE,CAEEC,OAAQ,WACR9C,QACA,CAEE,CAEE8C,OAAQ,kBACRC,SAAU,QACVC,KAAM,gBAAW5B,EAAX,EAAGmB,KAAQnB,MAAX,OAAyB,kBAAC,EAAD,CAAM3B,SAAU2B,MAIjD,CAEE0B,OAAQ,OACRC,SAAU,UAQhB,CAEED,OAAO,UACP9C,QACA,CAEE,CAEE8C,OAAQ,aACRC,SAAU,cAIZ,CAEED,OAAQ,aACRC,SAAU,mBAUlB,IAIA,OAEE,yBAAKxD,UAAU,OACb,kBAAC,EAAD,2BACE,kBAACQ,EAAD,CACEC,QAASA,EACTC,KAAMA,EACNgD,SAAUP,MClFxBQ,IAAShB,OACL,kBAAC,EAAD,MACFiB,SAASC,eAAe,W","file":"static/js/main.b0b02ced.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './style.css';\r\n\r\nfunction Card(props) {\r\n\r\n    return (\r\n\r\n        <div className='card'>\r\n            <div className='image-container'>\r\n                <img src={props.employee} alt={props.name}/>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n\r\n}\r\n\r\nexport default Card;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Title = (props) => {\r\n\r\n    return (\r\n\r\n        <div id='employeeDir'>\r\n            <h1 className='title'>{props.children}</h1>\r\n        </div>\r\n\r\n    );\r\n\r\n}\r\n\r\nexport default Title;","import React, { useState } from \"react\";\r\nimport { useTable, useSortBy, useFilters } from \"react-table\";\r\nimport \"./style.css\"\r\n\r\nexport default function Table({ columns, data }) {\r\n\r\n    const [filterNameInput, setFilterNameInput] = useState('');\r\n    const [filterOccupationInput, setFilterOccupationInput] = useState('');\r\n    const [filterDepartmentInput, setFilterDepartmentInput] = useState('');\r\n\r\n        const {\r\n\r\n            getTableProps,\r\n            getTableBodyProps,\r\n            headerGroups,\r\n            rows,\r\n            prepareRow,\r\n            setFilter\r\n\r\n        } = useTable (\r\n\r\n            {\r\n\r\n                columns,\r\n                data\r\n\r\n            },\r\n\r\n            useFilters,\r\n            useSortBy\r\n\r\n        );\r\n\r\n            const handleFilterChangeName = event => {\r\n\r\n                const value = event.target.value || undefined;\r\n                setFilter('name', value);\r\n                setFilterNameInput(value);\r\n\r\n            };\r\n\r\n            const handleFilterChangeOccupation = event => {\r\n\r\n                const value = event.target.value || undefined;\r\n                setFilter('occupation', value);\r\n                setFilterOccupationInput(value);\r\n\r\n            };\r\n\r\n            const handleFilterChangeDepartment = event => {\r\n\r\n                const value = event.target.value || undefined;\r\n                setFilter('department', value);\r\n                setFilterDepartmentInput(value);\r\n\r\n            };\r\n\r\n            return (\r\n\r\n                <React.Fragment>\r\n\r\n                    <div className='search'>\r\n\r\n                        <input placeholder={'input name here'} value={filterNameInput} onChange= {handleFilterChangeName}/>\r\n                        <input placeholder={'input occupation here'} value={filterOccupationInput} onChange= {handleFilterChangeOccupation}/>\r\n                        <input placeholder={'input department here'} value={filterDepartmentInput} onChange= {handleFilterChangeDepartment}/>\r\n\r\n                    </div>\r\n\r\n                    <table {...getTableProps()}>\r\n\r\n                        <thead>\r\n                            {headerGroups.map(headerGroup => (\r\n\r\n                                <tr {...headerGroup.getHeaderGroupProps()}>\r\n                                    {headerGroup.headers.map(column => (\r\n                \r\n                                        <th {...column.getHeaderProps(column.getSortByToggleProps())}\r\n                                            \r\n                                            className={\r\n                                                column.isSorted ? column.isSortedDesc ? \"sort-desc\" : \"sort-asc\" : \"\" }>\r\n\r\n                                               {column.render(\"Header\")} \r\n\r\n                                            </th>\r\n\r\n                                    ))}\r\n\r\n                                </tr>\r\n\r\n                            ))}\r\n\r\n                        </thead>\r\n\r\n                        <tbody {...getTableBodyProps()}>\r\n                            {rows.map((row, i) => {\r\n\r\n                                prepareRow(row);\r\n                                    return(\r\n\r\n                                        <tr {...row.getRowProps()}>\r\n                                            {row.cells.map(cell => {\r\n\r\n                                                return(\r\n\r\n                                                    <td {...cell.getCellProps()}>\r\n                                                        {cell.render(\"Cell\")}\r\n                                                    </td>\r\n\r\n                                                );\r\n\r\n                                            })}\r\n                                        </tr>\r\n\r\n                                    );\r\n\r\n                            })}\r\n                        </tbody>\r\n\r\n                    </table>\r\n                </React.Fragment>\r\n            );\r\n\r\n} ","import React, { useState, useEffect, useMemo, } from \"react\";\nimport Card from \"./components/Card\";\nimport Title from \"./components/Title\";\nimport Table from \"./components/Table\";\nimport Employee from \"./employee.json\";\n\nconst App = () => {\n\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n\n    const data = Employee;\n      setData(data);\n\n  },\n  \n    []);\n\n  const columns = useMemo(\n\n    () => \n\n      [\n\n        {\n\n          Header: 'Employee',\n          columns: \n          [\n\n            {\n\n              Header: 'Profile Picture',\n              accessor: 'image',\n              Cell: ({ cell: { value } }) => <Card employee={value}/>\n\n            },\n\n            {\n\n              Header: 'Name',\n              accessor: 'name'\n\n            }\n\n          ]\n\n        },\n\n        {\n\n          Header:'Details',\n          columns: \n          [\n\n            {\n\n              Header: 'Occupation',\n              accessor: 'occupation'\n\n            },\n\n            {\n\n              Header: 'Department',\n              accessor: 'department',\n\n            },\n\n          ]\n\n        }\n\n      ],\n\n      []\n\n  );\n\n      return (\n\n        <div className='App'>\n          <Title>Employee Directory</Title>\n            <Table\n              columns={columns}\n              data={data}\n              setTable={setData}\n            />\n        </div>\n\n      );\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}